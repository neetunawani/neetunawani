// Import dependencies
const express = require('express');
const bodyParser = require('body-parser')
const app = express();
const PORT = process.env.PORT || 3000;

app.use(bodyParser.json());

// Routes
app.get('/products', (req, res) => {
    
    res.json({ message: 'Get all products' });
});

app.post('/products', (req, res) => {
    
    res.json({ message: 'Create a new product' });
});
app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});// Import dependencies
const express = require('express');
const bodyParser = require('body-parser');

const app = express();
const PORT = process.env.PORT || 3000;

let products = [];
let orders = [];
let users = [];

// Middleware
app.use(bodyParser.json());

// Routes for products
app.get('/products', (req, res) => {
    res.json(products);
});

app.post('/products', (req, res) => {
    const newProduct = req.body;
    products.push(newProduct);
    res.status(201).json(newProduct);
});

app.get('/products/:id', (req, res) => {
    const productId = req.params.id;
    const product = products.find(product => product.id === productId);
    if (!product) {
        res.status(404).json({ message: 'Product not found' });
    } else {
        res.json(product);
    }
});

app.put('/products/:id', (req, res) => {
    const productId = req.params.id;
    const updatedProduct = req.body;
    const index = products.findIndex(product => product.id === productId);
    if (index === -1) {
        res.status(404).json({ message: 'Product not found' });
    } else {
        products[index] = { ...products[index], ...updatedProduct };
        res.json(products[index]);
    }
});

app.delete('/products/:id', (req, res) => {
    const productId = req.params.id;
    products = products.filter(product => product.id !== productId);
    res.status(204).end();
});

// Routes for orders
app.get('/orders', (req, res) => {
    res.json(orders);
});

app.post('/orders', (req, res) => {
    const newOrder = req.body;
    orders.push(newOrder);
    res.status(201).json(newOrder);
});


app.get('/users', (req, res) => {
    res.json(users);
});

app.post('/users', (req, res) => {
    const newUser = req.body;
    users.push(newUser);
    res.status(201).json(newUser);
});

// Start the server
app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});
